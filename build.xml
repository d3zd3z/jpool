<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:cpptasks="antlib:net.sf.antcontrib.cpptasks"
    name="jpool" default="build">

  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="native.src.dir" value="${basedir}/src/native"/>
  <property name="test.dir" value="${basedir}/test"/>

  <property name="target" value="${basedir}/target"/>
  <property name="classes.dir" value="${target}/classes"/>
  <property name="obj.dir" value="${target}/obj"/>
  <property name="so.dir" value="${target}/so"/>
  <property name="headers.dir" value="${target}/headers"/>
  <property name="test.classes.dir" value="${target}/test-classes"/>

  <target name="init" depends="resolve">
    <!-- Ant build tasks from scala. -->
    <path id="build.classpath">
      <pathelement location="${lib.dir}/scala-library-2.7.6.jar"/>
      <pathelement location="${lib.dir}/scalatest-0.9.5.jar"/>
      <pathelement location="${lib.dir}/h2-1.2.126.jar"/>
      <pathelement location="${lib.dir}/log4j-1.2.15.jar"/>
      <pathelement location="${lib.dir}/commons-codec-1.3.jar"/>
      <pathelement location="${classes.dir}"/>
    </path>
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
	<pathelement location="${lib.dir}/scala-compiler-2.7.6.jar"/>
	<pathelement location="${lib.dir}/scala-library-2.7.6.jar"/>
      </classpath>
    </taskdef>
    <taskdef uri="antlib:net.sf.antcontrib.cpptasks"
	resource="net/sf/antcontrib/cpptasks/antlib.xml"
	classpath="${lib.dir}/cpptasks-1.0b5.jar"/>

    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
  </target>

  <target name="build" depends="compile.src, compile.test, shared">
  </target>

  <target name="compile.src" depends="init">
    <fsc
	deprecation="yes"
	srcdir="${src.dir}"
	destdir="${classes.dir}"
	classpathref="build.classpath" />
    <jar destfile="${target}/jpool.jar" basedir="${classes.dir}"/>
  </target>

  <target name="compile.test" depends="init, compile.src">
    <fsc
	deprecation="yes"
	srcdir="${test.dir}"
	destdir="${test.classes.dir}"
	classpathref="build.classpath" />
    <jar destfile="${target}/jpool-tests.jar" basedir="${test.classes.dir}"/>
  </target>

  <target name="clean">
    <delete dir="${target}"/>
    <delete dir="${lib.dir}"/>
  </target>

  <target name="headers" depends="compile.src">
    <mkdir dir="${headers.dir}"/>
    <javah destdir="${headers.dir}">
      <classpath>
	<pathelement location="${classes.dir}"/>
	<pathelement location="${lib.dir}/scala-library-2.7.6.jar"/>
      </classpath>
      <class name="org.davidb.jpool.Linux$$"/>
    </javah>
  </target>

  <target name="shared" depends="headers">
    <mkdir dir="${obj.dir}"/>
    <mkdir dir="${so.dir}"/>
    <cpptasks:cc outtype="shared" objdir="${obj.dir}" outfile="${so.dir}/linux">
      <includepath location="${headers.dir}"/>
      <!-- Some installs point java.home to the JRE one level within
	the JDK.  Set the path to both dirs. -->
      <sysincludepath location="${java.home}/include"/>
      <sysincludepath location="${java.home}/../include"/>
      <sysincludepath location="${java.home}/include/linux"/>
      <sysincludepath location="${java.home}/../include/linux"/>
      <fileset dir="${native.src.dir}" includes="*.c"/>
    </cpptasks:cc>
  </target>

  <target name="resolve">
    <ivy:retrieve type="jar"/>
  </target>

  <property name="my.version" value="1.0.1-SNAPSHOT"/>
  <target name="tar" depends="build">
    <tar destfile="${target}/jpool-bin-${my.version}.tar.gz"
      compression="gzip">
      <tarfileset prefix="jpool-bin-${my.version}/bin" file="bin/jpool" filemode="755"/>
      <tarfileset prefix="jpool-bin-${my.version}" file="bin" filemode="755"/>
      <tarfileset prefix="jpool-bin-${my.version}/target" dir="target">
	<include name="jpool.jar"/>
	<include name="so/*.so"/>
      </tarfileset>
      <tarfileset prefix="jpool-bin-${my.version}/target" file="so" filemode="755"/>
      <tarfileset prefix="jpool-bin-${my.version}" file="target" filemode="755"/>
      <tarfileset prefix="jpool-bin-${my.version}/lib" dir="lib">
	<include name="*.jar"/>
	<exclude name="scala-compiler*"/>
	<exclude name="scalatest*"/>
      </tarfileset>
      <tarfileset prefix="jpool-bin-${my.version}" file="lib" filemode="755"/>
    </tar>
  </target>

  <!-- 
  <target name="broken-test" depends="compile.test, shared">
    <taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestTask">
      <classpath>
	<pathelement location="${scala.home}/scala-library.jar"/>
	<pathelement location="${lib.dir}/scalatest-0.9.5.jar"/>
      </classpath>
    </taskdef>
    <scalatest>
      <!- - TODO: This is Linux specific. - ->
      <property name="linux.lib" value="${so.dir}/liblinux.so"/>
      <runpath>
	<pathelement location="${target}/jpool.jar"/>
	<pathelement location="${target}/jpool-tests.jar"/>
      </runpath>
      <runpath refid="build.classpath"/>
      <!- - <suite classname="org.davidb.logging.LoggerSuite"/> - ->
      <wildcard package="org.davidb"/>
      <reporter type="stdout"/>
    </scalatest>
  </target>
  -->

  <!-- Neither Ant, nor the Scalatest ant task seem willing, at all,
    to let me pass _anything_ through to the invoked test, no way to inform
    it of the path where it might possibly be able to find it's shared
    library.  As such, we're just going to run the Runner directly. -->
  <target name="test" depends="compile.test, shared">
    <java classname="org.scalatest.tools.Runner">
      <!-- TODO: This is Linux specific. -->
      <sysproperty key="linux.lib" value="${so.dir}/liblinux.so"/>
      <classpath>
	<pathelement location="${target}/jpool.jar"/>
      </classpath>
      <classpath refid="build.classpath"/>
      <arg value="-p"/>
      <arg value="${target}/jpool-tests.jar"/>
      <arg value="-w"/>
      <arg value="org.davidb"/>
      <arg value="-o"/>
    </java>
  </target>

</project>
